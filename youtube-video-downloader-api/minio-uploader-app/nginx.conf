server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # App SPA
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Reverse proxy a backend en mismo origen via /api
    # Ruta específica: endpoints de video van a 'prueba-ciberfobia'
    location /api/v1/video/ {
        resolver 1.1.1.1 8.8.8.8 valid=300s;
        # Reescribe /api/v1/video/... -> /v1/video/... en el upstream
        proxy_pass https://prueba-ciberfobia.1xrk3z.easypanel.host/v1/video/;
        proxy_http_version 1.1;
        proxy_set_header Host prueba-ciberfobia.1xrk3z.easypanel.host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_ssl_server_name on;
        proxy_ssl_verify off;

        # Límites y timeouts
        client_max_body_size 600m;
        proxy_request_buffering off;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
        send_timeout 600s;

        # CORS básico (opcional, mismo origen)
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Vary "Origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        # No interceptar 404 aquí para no enmascarar errores reales
        proxy_intercept_errors off;
    }

    location /api/ {
        # Resolver DNS explícito (por si el contenedor no tiene resolv.conf adecuado)
        resolver 1.1.1.1 8.8.8.8 valid=300s;
        # Pasar al backend (EasyPanel backend)
        proxy_pass https://prueba-editor.1xrk3z.easypanel.host/;
        proxy_http_version 1.1;
        proxy_set_header Host prueba-editor.1xrk3z.easypanel.host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_ssl_server_name on;
        # Desactivar verificación TLS del upstream (prueba). Ideal: instalar ca-certificates en imagen y habilitar verify.
        proxy_ssl_verify off;

        # Evitar que redirecciones del upstream rompan el mismo origen
        proxy_redirect off;

        # Interceptar errores HTML del upstream y devolver JSON
        proxy_intercept_errors on;
        error_page 400 403 404 405 413 500 502 503 504 = @api_error_json;

        # Límites y timeouts para cargas grandes
        client_max_body_size 600m;
        proxy_request_buffering off;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
        send_timeout 600s;

        # Headers CORS por si el backend responde con error (aunque ya no haría falta al ser mismo origen)
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Vary "Origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;

        # Responder preflight rápidamente
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # Proxy para presigned URLs de MinIO, evitando CORS desde el navegador
    location /minio-proxy/ {
        # Resolver DNS explícito
        resolver 1.1.1.1 8.8.8.8 valid=300s;

        # Pasar la request a MinIO manteniendo ruta y query
        proxy_pass https://prueba-minio.1xrk3z.easypanel.host/;
        proxy_http_version 1.1;
        proxy_set_header Host prueba-minio.1xrk3z.easypanel.host; # crítico para que la firma siga válida
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_ssl_server_name on;
        proxy_ssl_verify off; # si tienes CA instaladas puedes activar verificación

        # Límites y timeouts altos
        client_max_body_size 2g;
        # Importante: habilitar buffering para que Nginx calcule y envíe Content-Length al upstream (evita chunked)
        proxy_request_buffering on;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        send_timeout 3600s;

        # Evitar Transfer-Encoding: chunked y forzar Content-Length hacia MinIO
        chunked_transfer_encoding off;
        proxy_set_header Expect "";

        # Manejo del preflight
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "https://prueba-fonten.1xrk3z.easypanel.host" always;
            add_header Access-Control-Allow-Methods "GET, PUT, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, x-amz-acl, x-amz-date, x-amz-content-sha256" always;
            add_header Access-Control-Max-Age "600" always;
            return 204;
        }

        # Headers CORS para respuestas normales
        add_header Access-Control-Allow-Origin "https://prueba-fonten.1xrk3z.easypanel.host" always;
        add_header Access-Control-Expose-Headers "ETag" always;
        add_header Vary "Origin" always;
    }

    location @api_error_json {
        default_type application/json;
        return 502 '{"error":"Upstream error from backend","status":502}';
    }
}
